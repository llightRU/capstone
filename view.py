import re

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QMessageBox
import sys
import validation as v
import data_executer as de
import qt_executer as qe
import time

class Ui_MainWindow(QMainWindow):
    def __init__(self,parent=None):
        super(Ui_MainWindow, self).__init__(parent)

    def setupUi(self):
        self.setObjectName("MainWindow")
        self.resize(800, 600)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/view.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget()
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.raw = QtWidgets.QWidget()
        self.raw.setObjectName("raw")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.raw)
        self.verticalLayout_2.setContentsMargins(0, 7, 0, 0)
        self.verticalLayout_2.setSpacing(7)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.raw_table = QtWidgets.QTableWidget(self.raw)
        self.raw_table.setMaximumSize(QtCore.QSize(16777215, 500))
        self.raw_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.raw_table.setObjectName("raw_table")
        self.raw_table.setColumnCount(17)
        self.raw_table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(11, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(12, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(13, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(14, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(15, item)
        item = QtWidgets.QTableWidgetItem()
        self.raw_table.setHorizontalHeaderItem(16, item)
        self.verticalLayout_2.addWidget(self.raw_table)
        self.groupBox = QtWidgets.QGroupBox(self.raw)
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.comboBox = QtWidgets.QComboBox(self.groupBox)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout_6.addWidget(self.comboBox)
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setText("")
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_6.addWidget(self.label_5)
        self.raw_txt = QtWidgets.QLineEdit(self.groupBox)
        self.raw_txt.setObjectName("raw_txt")
        self.horizontalLayout_6.addWidget(self.raw_txt)
        self.raw_search = QtWidgets.QPushButton(self.groupBox)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/images/search.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.raw_search.setIcon(icon1)
        self.raw_search.setObjectName("raw_search")
        self.horizontalLayout_6.addWidget(self.raw_search)
        self.verticalLayout_2.addWidget(self.groupBox)
        self.tabWidget.addTab(self.raw, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.setCentralWidget(self.centralwidget)



        if v.file_valid('data/design_data/Raw.csv'):
            data = de.data_from_csv('data/design_data/Raw.csv')
            self.data_to_table(self.raw_table,data)
            self.raw_search.clicked.connect(
                lambda: self.searchClicked(self.comboBox, self.raw_txt, self.raw_table, data))
        else:
            QMessageBox.information(self, 'Error', "\nRaw data error", QMessageBox.Close)

        self.retranslateUi()
        self.tabWidget.setCurrentIndex(0)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "ViewData"))
        item = self.raw_table.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Age"))
        item = self.raw_table.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Job"))
        item = self.raw_table.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Marital"))
        item = self.raw_table.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Education"))
        item = self.raw_table.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Default"))
        item = self.raw_table.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Balance"))
        item = self.raw_table.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Housing"))
        item = self.raw_table.horizontalHeaderItem(7)
        item.setText(_translate("MainWindow", "Loan"))
        item = self.raw_table.horizontalHeaderItem(8)
        item.setText(_translate("MainWindow", "Contact"))
        item = self.raw_table.horizontalHeaderItem(9)
        item.setText(_translate("MainWindow", "Day"))
        item = self.raw_table.horizontalHeaderItem(10)
        item.setText(_translate("MainWindow", "Month"))
        item = self.raw_table.horizontalHeaderItem(11)
        item.setText(_translate("MainWindow", "Duration"))
        item = self.raw_table.horizontalHeaderItem(12)
        item.setText(_translate("MainWindow", "Campaign"))
        item = self.raw_table.horizontalHeaderItem(13)
        item.setText(_translate("MainWindow", "Pdays"))
        item = self.raw_table.horizontalHeaderItem(14)
        item.setText(_translate("MainWindow", "Previous"))
        item = self.raw_table.horizontalHeaderItem(15)
        item.setText(_translate("MainWindow", "Poutcome"))
        item = self.raw_table.horizontalHeaderItem(16)
        item.setText(_translate("MainWindow", "Y"))
        self.groupBox.setTitle(_translate("MainWindow", "Search"))
        self.comboBox.setItemText(0, _translate("MainWindow", "Age"))
        self.comboBox.setItemText(1, _translate("MainWindow", "Job"))
        self.comboBox.setItemText(2, _translate("MainWindow", "Marital"))
        self.comboBox.setItemText(3, _translate("MainWindow", "Education"))
        self.comboBox.setItemText(4, _translate("MainWindow", "Default"))
        self.comboBox.setItemText(5, _translate("MainWindow", "Balance"))
        self.comboBox.setItemText(6, _translate("MainWindow", "Housing"))
        self.comboBox.setItemText(7, _translate("MainWindow", "Loan"))
        self.comboBox.setItemText(8, _translate("MainWindow", "Contact"))
        self.comboBox.setItemText(9, _translate("MainWindow", "Day"))
        self.comboBox.setItemText(10, _translate("MainWindow", "Month"))
        self.comboBox.setItemText(11, _translate("MainWindow", "Duration"))
        self.comboBox.setItemText(12, _translate("MainWindow", "Campaign"))
        self.comboBox.setItemText(13, _translate("MainWindow", "Pdays"))
        self.comboBox.setItemText(14, _translate("MainWindow", "Previous"))
        self.comboBox.setItemText(15, _translate("MainWindow", "Poutcome"))
        self.comboBox.setItemText(16, _translate("MainWindow", "Y"))
        self.raw_search.setText(_translate("MainWindow", "Search"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.raw), _translate("MainWindow", "Raw"))

    def append_re_translate(self,name,table,groupBox,comboBox,search,tab):
        try:
            _translate = QtCore.QCoreApplication.translate
            item = table.horizontalHeaderItem(0)
            item.setText(_translate("MainWindow", "ID"))
            item = table.horizontalHeaderItem(1)
            item.setText(_translate("MainWindow", "Age"))
            item = table.horizontalHeaderItem(2)
            item.setText(_translate("MainWindow", "Job"))
            item = table.horizontalHeaderItem(3)
            item.setText(_translate("MainWindow", "Marital"))
            item = table.horizontalHeaderItem(4)
            item.setText(_translate("MainWindow", "Education"))
            item = table.horizontalHeaderItem(5)
            item.setText(_translate("MainWindow", "Default"))
            item = table.horizontalHeaderItem(6)
            item.setText(_translate("MainWindow", "Balance"))
            item = table.horizontalHeaderItem(7)
            item.setText(_translate("MainWindow", "Housing"))
            item = table.horizontalHeaderItem(8)
            item.setText(_translate("MainWindow", "Loan"))
            item = table.horizontalHeaderItem(9)
            item.setText(_translate("MainWindow", "Contact"))
            item = table.horizontalHeaderItem(10)
            item.setText(_translate("MainWindow", "Day"))
            item = table.horizontalHeaderItem(11)
            item.setText(_translate("MainWindow", "Month"))
            item = table.horizontalHeaderItem(12)
            item.setText(_translate("MainWindow", "Duration"))
            item = table.horizontalHeaderItem(13)
            item.setText(_translate("MainWindow", "Campaign"))
            item = table.horizontalHeaderItem(14)
            item.setText(_translate("MainWindow", "Pdays"))
            item = table.horizontalHeaderItem(15)
            item.setText(_translate("MainWindow", "Previous"))
            item = table.horizontalHeaderItem(16)
            item.setText(_translate("MainWindow", "Poutcome"))
            item = table.horizontalHeaderItem(17)
            item.setText(_translate("MainWindow", "Y"))
            groupBox.setTitle(_translate("MainWindow", "Search"))
            comboBox.setItemText(0, _translate("MainWindow", "Id"))
            comboBox.setItemText(1, _translate("MainWindow", "Age"))
            comboBox.setItemText(2, _translate("MainWindow", "Job"))
            comboBox.setItemText(3, _translate("MainWindow", "Marital"))
            comboBox.setItemText(4, _translate("MainWindow", "Education"))
            comboBox.setItemText(5, _translate("MainWindow", "Default"))
            comboBox.setItemText(6, _translate("MainWindow", "Balance"))
            comboBox.setItemText(7, _translate("MainWindow", "Housing"))
            comboBox.setItemText(8, _translate("MainWindow", "Loan"))
            comboBox.setItemText(9, _translate("MainWindow", "Contact"))
            comboBox.setItemText(10, _translate("MainWindow", "Day"))
            comboBox.setItemText(11, _translate("MainWindow", "Month"))
            comboBox.setItemText(12, _translate("MainWindow", "Duration"))
            comboBox.setItemText(13, _translate("MainWindow", "Campaign"))
            comboBox.setItemText(14, _translate("MainWindow", "Pdays"))
            comboBox.setItemText(15, _translate("MainWindow", "Previous"))
            comboBox.setItemText(16, _translate("MainWindow", "Poutcome"))
            comboBox.setItemText(17, _translate("MainWindow", "Y"))
            search.setText(_translate("MainWindow", "Search"))
            self.tabWidget.setTabText(self.tabWidget.indexOf(tab), _translate("MainWindow", name))
        except Exception as err:
            QMessageBox.information(self, 'Error', str(err.args[0]), QMessageBox.Close)

    def append_new_data(self,name,data):
        try:
            try:
                tab = QtWidgets.QWidget()
                tab.setObjectName(name + "Raw")
                verticalLayout_2 = QtWidgets.QVBoxLayout(tab)
                verticalLayout_2.setContentsMargins(0, 7, 0, 0)
                verticalLayout_2.setSpacing(7)
                verticalLayout_2.setObjectName(name + "verticalLayout_2")
            except Exception as err:
                QMessageBox.information(self, 'Error', str(err.args[0]) + '\nNew tab fail', QMessageBox.Close)

            try:
                tab = QtWidgets.QWidget()
                tab.setObjectName(name+"raw")
                verticalLayout_2 = QtWidgets.QVBoxLayout(tab)
                verticalLayout_2.setContentsMargins(0, 7, 0, 0)
                verticalLayout_2.setSpacing(7)
                verticalLayout_2.setObjectName(name+"verticalLayout_2")
                raw_table = QtWidgets.QTableWidget(tab)
                raw_table.setMaximumSize(QtCore.QSize(16777215, 500))
                raw_table.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
                raw_table.setObjectName(name+"raw_table")
                raw_table.setColumnCount(18)
                raw_table.setRowCount(0)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(0, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(1, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(2, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(3, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(4, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(5, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(6, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(7, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(8, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(9, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(10, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(11, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(12, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(13, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(14, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(15, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(16, item)
                item = QtWidgets.QTableWidgetItem()
                raw_table.setHorizontalHeaderItem(17, item)
                verticalLayout_2.addWidget(raw_table)
            except Exception as err:
                QMessageBox.information(self, 'Error', str(err.args[0]) + '\nFrame top fail', QMessageBox.Close)

            try:
                groupBox = QtWidgets.QGroupBox(tab)
                groupBox.setObjectName(name+"groupBox")
                horizontalLayout_6 = QtWidgets.QHBoxLayout(groupBox)
                horizontalLayout_6.setObjectName(name+"horizontalLayout_6")
                comboBox = QtWidgets.QComboBox(groupBox)
                comboBox.setObjectName(name+"comboBox")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                comboBox.addItem("")
                horizontalLayout_6.addWidget(comboBox)
                label_5 = QtWidgets.QLabel(groupBox)
                label_5.setText("")
                label_5.setObjectName(name+"label_5")
                horizontalLayout_6.addWidget(label_5)
                raw_txt = QtWidgets.QLineEdit(groupBox)
                raw_txt.setObjectName(name+"raw_txt")
                horizontalLayout_6.addWidget(raw_txt)
                raw_search = QtWidgets.QPushButton(groupBox)
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap(":/images/search.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                raw_search.setIcon(icon1)
                raw_search.setObjectName(name+"raw_search")
                horizontalLayout_6.addWidget(raw_search)
                verticalLayout_2.addWidget(groupBox)
                self.tabWidget.addTab(tab, "")
                self.verticalLayout.addWidget(self.tabWidget)
                self.setCentralWidget(self.centralwidget)
            except Exception as err:
                QMessageBox.information(self, 'Error', str(err.args[0]) + '\nFrame bot fail', QMessageBox.Close)

            try:
                self.append_re_translate(name,raw_table,groupBox,comboBox,raw_search,tab)
            except Exception as err:
                QMessageBox.information(self, 'Error', str(err.args[0]) + '\nFrame bot fail', QMessageBox.Close)



            self.data_to_table(raw_table, data)

            raw_search.clicked.connect(lambda: self.searchClicked(comboBox, raw_txt, raw_table, data))
        except Exception as err:
            QMessageBox.information(self, 'Error', str(err.args[0]) + '\nRe-trans fail', QMessageBox.Close)

    def data_to_table(self,table,data):
        try:
            qe.data_to_view_table(table,data)
        except Exception as err:
            QMessageBox.information(self, 'Error', str(err.args[0])+"\nTable data error", QMessageBox.Close)

    def searchClicked(self,comboBox,raw_txt,table,data):
        try:

            atr = comboBox.currentText().lower()
            txt = raw_txt.text().lower()

            data = de.search_from_csv(data,atr,txt)
            if data is None:
                QMessageBox.information(self, 'Error', "No such data", QMessageBox.Close)
                return

            self.data_to_table(table,data)

        except Exception as err:
            QMessageBox.information(self, 'Error', str(err.args[0])+"\nSearch error", QMessageBox.Close)

if __name__ == "__main__":
    sys.path.append('icon')
    import designer
    app = QtWidgets.QApplication(sys.argv)
    ui = Ui_MainWindow()
    ui.setupUi()
    """data = de.data_from_csv('data/predict_data/Raw.csv')
    ui.append_new_data('pre',data)"""
    data = de.data_from_excel('data/test_pred.xlsx')
    ui.append_new_data('abc', data)
    ui.show()
    sys.exit(app.exec_())

